<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>name</key>
    <string>Bella</string>
    <key>scopeName</key>
    <string>source.bs</string>
    <key>fileTypes</key>
    <array>
      <string>bs</string>
    </array>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#comment</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#declarations</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>declarations</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#type-declarations</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#support-top-level-declaration-keywords</string>
          </dict>
        </array>
      </dict>
      <key>type-declarations</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#service-host-declaration</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#service-declaration</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#procedure-declaration</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#formula-declaration</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#object-declaration</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#setting-declaration</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#enum-declaration</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
        </array>
      </dict>
      <key>service-host-declaration</key>
      <dict>
        <key>begin</key>
        <string>(?=\b(hosted|external)\b)</string>
        <key>end</key>
        <string>(?=$)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(?x)
\b(hosted|external)\b\s+
\b(service)\b\s+
(@?[_[:alpha:]][_[:alnum:]]+)\s+
\b(on)\b\s+
(@?\[*[_[:alpha:]][_[:alnum:]]+\]*)\s*</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.modifier.declaration.service.bella</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.other.class.service.bella</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.service.bella</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>keyword.other.class.service.bella</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>variable.parameter.type.transport.service.bella</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#procedure-signature-declaration</string>
              </dict>
            </array>
            <key>end</key>
            <string>(?=$)</string>
          </dict>
        </array>
      </dict>
      <key>service-declaration</key>
      <dict>
        <key>name</key>
        <string>meta.function.service.bella</string>
        <key>begin</key>
        <string>\b(service)\b\s+([_[:alpha:]][_[:alnum:]]+)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.class.service.bella</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.service.bella</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#procedure-signature-declaration</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
        </array>
        <key>end</key>
        <string>(?=^\S)</string>
      </dict>
      <key>object-declaration</key>
      <dict>
        <key>name</key>
        <string>meta.object.declaration.bella</string>
        <key>begin</key>
        <string>(?=\b(object|persistent)\b)</string>
        <key>end</key>
        <string>(^\s*$)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(persistent)\b\s+</string>
            <key>name</key>
            <string>storage.modifier.declaration.service.bella</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>\b(object)\b\s+([_[:alpha:]][_[:alnum:]]+)\s*(.*)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.other.object.declaration.bella</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.object.bella</string>
              </dict>
              <key>3</key>
              <dict>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#return-type-declaration</string>
                  </dict>
                </array>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=$)</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#object-field-declaration</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
        </array>
      </dict>
      <key>enum-declaration</key>
      <dict>
        <key>name</key>
        <string>meta.enum.declaration.bella</string>
        <key>begin</key>
        <string>\b(enum)\b\s+\b(@?[_[:alpha:]][_[:alnum:]]*)\s+</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.enum.declaration.bella</string>
          </dict>
          <key>2</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>@?[_[:alpha:]][_[:alnum:]]*</string>
                <key>name</key>
                <string>entity.name.type.enum.bella</string>
              </dict>
            </array>
          </dict>
        </dict>
        <key>end</key>
        <string>(^\s*$)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#identifier</string>
          </dict>
        </array>
      </dict>
      <key>setting-declaration</key>
      <dict>
        <key>name</key>
        <string>meta.settings.declaration.bella</string>
        <key>begin</key>
        <string>\b(setting)\b\s+([_[:alpha:]][_[:alnum:]]+)\b\s*(.+)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.settings.declaration.bella</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.class.object.bella</string>
          </dict>
          <key>3</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#return-type-declaration</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#expression</string>
              </dict>
            </array>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=$)</string>
      </dict>
      <key>object-field-declaration</key>
      <dict>
        <key>name</key>
        <string>meta.object.field.declaration</string>
        <key>match</key>
        <string>([_[:alpha:]][_[:alnum:]]+)\b\s*(.+)\s*</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.parameter.object.bella</string>
          </dict>
          <key>2</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#return-type-declaration</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#expression</string>
              </dict>
            </array>
          </dict>
        </dict>
      </dict>
      <key>return-type-declaration</key>
      <dict>
        <key>name</key>
        <string>meta.common.declaration.return-type.bella</string>
        <key>match</key>
        <string>(\:)\s*\b([_[:alpha:]][_[:alnum:]]+)\b(\S+)*\s*</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.separator.colon.return-type.bella</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>support.function.return-type.bella</string>
          </dict>
          <key>3</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#collection-modifier</string>
              </dict>
            </array>
          </dict>
        </dict>
      </dict>
      <key>collection-modifier</key>
      <dict>
        <key>name</key>
        <string>meta.common.declaration.collection-modifier</string>
        <key>begin</key>
        <string>(\[)([_[:alpha:]][_[:alnum:]]+|\*)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.close.bella</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>variable.language.accessor.placeholder</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\])</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.close.bella</string>
          </dict>
        </dict>
      </dict>
      <key>procedure-declaration</key>
      <dict>
        <key>name</key>
        <string>meta.function.procedure.declaration.bella</string>
        <key>begin</key>
        <string>^\s*\b(specific|generic|.*)\b(procedure)\b\s+(.+)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.declaration.generic-specific.bella</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.declaration.procedure.bella</string>
          </dict>
          <key>3</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#procedure-signature-declaration</string>
              </dict>
            </array>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=^\S)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#statement</string>
          </dict>
        </array>
      </dict>
      <key>formula-declaration</key>
      <dict>
        <key>name</key>
        <string>meta.function.formula.declaration.bella</string>
        <key>begin</key>
        <string>^\s*\b(specific|generic|.*)\b(formula)\b\s+(.+)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.declaration.generic-specific.bella</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.declaration.formula.bella</string>
          </dict>
          <key>3</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#procedure-signature-declaration</string>
              </dict>
            </array>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=^\S)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#statement</string>
          </dict>
        </array>
      </dict>
      <key>procedure-signature-declaration</key>
      <dict>
        <key>name</key>
        <string>meta.function.procedure.signature.declaration.bella</string>
        <key>begin</key>
        <string>\s*([_[:alpha:]][_[:alnum:]]+)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.bella</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=$)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\(</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.parenthesis.open.bella</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.parenthesis.close.bella</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#procedure-params-declaration</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#return-type-declaration</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(oneway)\b</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.declaration.return-type.bella</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>procedure-params-declaration</key>
      <dict>
        <key>name</key>
        <string>meta.function.parameter.declaration.bella</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\s*\b(out)\b\s+</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.declaration.function.procedure.out.bella</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>\s*\b([_[:alpha:]][_[:alnum:]]+)\b\s*:\s*\b([_[:alpha:]][_[:alnum:]]+)\b</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>meta.variable.definition.parameter.procedure.bella</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>variable.parameter.function.procedure.bella</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>\s*\b([_[:alpha:]][_[:alnum:]]+)\b</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.parameter.function.procedure.bella</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>comment</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>comment.block.bella</string>
            <key>begin</key>
            <string>/\*(\*)?</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.bella</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\*/</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.bella</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>begin</key>
            <string>(^\s+)?(?=//)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.whitespace.comment.leading.bella</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=$)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>comment.line.double-slash.bella</string>
                <key>begin</key>
                <string>(?&lt;!/)//(?:(?!/)|(?=//))</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.comment.bella</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=$)</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>expression</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#if-statement-ternary3</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#support-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#invocation-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#arrow-function-expression-body</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression-operators</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#parenthesized-expression</string>
          </dict>
        </array>
      </dict>
      <key>statement</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#foreach-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#if-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#throw-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#call-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#local-declaration</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>local-declaration</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#variable-declaration</string>
          </dict>
        </array>
      </dict>
      <key>variable-declaration</key>
      <dict>
        <key>name</key>
        <string>meta.variable.declaration.bella</string>
        <key>begin</key>
        <string>^\s*(let|\s*)\s*\b([_[:alpha:]][_[:alnum:]]+)(\[.*|\s*)\s*(?:=)\s*(.+)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.declaration.generic-specific.bella</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>variable.parameter.variable.declaration.bella</string>
          </dict>
          <key>3</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#collection-modifier</string>
              </dict>
            </array>
          </dict>
          <key>4</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expression</string>
              </dict>
            </array>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=$)</string>
      </dict>
      <key>element-access-expression</key>
      <dict>
        <key>begin</key>
        <string>(?x)
(?:(\.)\s*)                        # preceding dot?
(?:(@?[_[:alpha:]][_[:alnum:]]*)\s*)? # property name</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.null-conditional.apex</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.accessor.apex</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>variable.other.object.property.apex</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.null-conditional.apex</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=\B)</string>
      </dict>
      <key>if-statement-ternary3</key>
      <dict>
        <key>name</key>
        <string>meta.common.expression.ternary.multi-line.bella</string>
        <key>begin</key>
        <string>(?x)
(@?if)\s*
(?=\(|\s*$)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.conditional-ternary.if.bella</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=\))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>if-statement</key>
      <dict>
        <key>name</key>
        <string>meta.common.statement.if.bella</string>
        <key>begin</key>
        <string>\s(if|else if|else)\s+(.*)(?=\s*$)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.conditional.if.bella</string>
          </dict>
          <key>2</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expression</string>
              </dict>
            </array>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=$)</string>
      </dict>
      <key>foreach-statement</key>
      <dict>
        <key>name</key>
        <string>meta.common.statement.foreach.bella</string>
        <key>begin</key>
        <string>\s*(foreach)(.+)\b(in)\b(.+)\s*(?=\s*$)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.foreach.bella</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>variable.parameter.variable.declaration.bella</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>keyword.declaration.foreach.in.bella</string>
          </dict>
          <key>4</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expression</string>
              </dict>
            </array>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=$)</string>
      </dict>
      <key>throw-statement</key>
      <dict>
        <key>name</key>
        <string>meta.common.statement.throw.bella</string>
        <key>begin</key>
        <string>\s*(error)\s*(\[)(.+)(\])\s+(.+)\s*(?=\s*$)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.error.bella</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.open.bella</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.error-enum.bella</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.close.bella</string>
          </dict>
          <key>5</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expression</string>
              </dict>
            </array>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=$)</string>
      </dict>
      <key>call-statement</key>
      <dict>
        <key>name</key>
        <string>meta.common.statement.call.bella</string>
        <key>begin</key>
        <string>\s*(call)\s*(@?[_[:alpha:]][_[:alnum:]]+)\s*</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.support.call.bella</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.bella</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=$)</string>
      </dict>
      <key>support-expression</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#support-type</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#support-keywords</string>
          </dict>
        </array>
      </dict>
      <key>support-type</key>
      <dict>
        <key>name</key>
        <string>meta.support.bella</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#support-functions</string>
          </dict>
        </array>
      </dict>
      <key>support-functions</key>
      <dict>
        <key>match</key>
        <string>\b(LogInfo|LogError|IsEmpty|With)\b</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>support.function.bella</string>
          </dict>
        </dict>
      </dict>
      <key>support-keywords</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#support-control-keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#support-declaration-keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#support-top-level-declaration-keywords</string>
          </dict>
        </array>
      </dict>
      <key>support-control-keywords</key>
      <dict>
        <key>match</key>
        <string>\b(new|empty|return|not|in|let|call|foreach)\b</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.support.bella</string>
          </dict>
        </dict>
      </dict>
      <key>support-declaration-keywords</key>
      <dict>
        <key>match</key>
        <string>\b(out|is|as)\b</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.declaration.support.bella</string>
          </dict>
        </dict>
      </dict>
      <key>support-top-level-declaration-keywords</key>
      <dict>
        <key>match</key>
        <string>\b(service|procedure|object|formula|persistent|generic|specific)\b</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.declaration.support.bella</string>
          </dict>
        </dict>
      </dict>
      <key>invocation-expression</key>
      <dict>
        <key>name</key>
        <string>meta.common.expression.invocation</string>
        <key>begin</key>
        <string>(?x)
(@?\s*\b[[:upper:]][_[:alnum:]]+\.)
(@?[_[:alpha:]][_[:alnum:]]+)\s*                 # method name
(?=\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.class.type-invocation.bella</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.bella</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=\))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#argument-list</string>
          </dict>
        </array>
      </dict>
      <key>argument-list</key>
      <dict>
        <key>begin</key>
        <string>\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.open.bella</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.close.bella</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>parenthesized-expression</key>
      <dict>
        <key>name</key>
        <string>meta.common.expression.parenthesized-expression</string>
        <key>begin</key>
        <string>\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.open.bella</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.close.bella</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>arrow-function-expression-body</key>
      <dict>
        <key>name</key>
        <string>meta.common.expression.arrow-func</string>
        <key>begin</key>
        <string>=&gt;</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.declaration.function.arrow.bella</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=\))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>expression-operators</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.operator.collection.compound.bella</string>
            <key>match</key>
            <string>--=|\+\+=</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.compound.bella</string>
            <key>match</key>
            <string>\*=|/=|%=|\+=|-=</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.compound.bitwise.bella</string>
            <key>match</key>
            <string>\&amp;=|\^=|&lt;&lt;=|&gt;&gt;=|\|=</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.bitwise.shift.bella</string>
            <key>match</key>
            <string>&lt;&lt;|&gt;&gt;</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.comparison.bella</string>
            <key>match</key>
            <string>==|!=</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.relational.bella</string>
            <key>match</key>
            <string>&lt;=|&gt;=|&lt;|&gt;</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.logical.bella</string>
            <key>match</key>
            <string>\!|&amp;&amp;|\|\|</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.bitwise.bella</string>
            <key>match</key>
            <string>\&amp;|~|\^|\|</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.bella</string>
            <key>match</key>
            <string>\=</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.decrement.bella</string>
            <key>match</key>
            <string>--</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.increment.bella</string>
            <key>match</key>
            <string>\+\+</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.arithmetic.bella</string>
            <key>match</key>
            <string>%|\*|/|-|\+</string>
          </dict>
        </array>
      </dict>
      <key>punctuation-comma</key>
      <dict>
        <key>name</key>
        <string>punctuation.separator.comma.bella</string>
        <key>match</key>
        <string>,</string>
      </dict>
      <key>literal</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#boolean-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#null-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numeric-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string-literal</string>
          </dict>
        </array>
      </dict>
      <key>boolean-literal</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.language.boolean.true.bella</string>
            <key>match</key>
            <string>(?&lt;!\.)\btrue\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.language.boolean.false.bella</string>
            <key>match</key>
            <string>(?&lt;!\.)\bfalse\b</string>
          </dict>
        </array>
      </dict>
      <key>null-literal</key>
      <dict>
        <key>name</key>
        <string>constant.language.null.bella</string>
        <key>match</key>
        <string>(?&lt;!\.)\bnull\b</string>
      </dict>
      <key>numeric-literal</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.numeric.datetime.bella</string>
            <key>match</key>
            <string>\b(\d{4}\-\d{2}\-\d{2}T\d{2}\:\d{2}\:\d{2}(\-|\+)\d{2}\:\d{2})\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.datetime.bella</string>
            <key>match</key>
            <string>\b(\d{4}\-\d{2}\-\d{2}T\d{2}\:\d{2}\:\d{2}(Z)?)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.date.bella</string>
            <key>match</key>
            <string>\b(\d{4}\-\d{2}\-\d{2})\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.hex.bella</string>
            <key>match</key>
            <string>\b0(x|X)[0-9a-fA-F_]+(U|u|L|l|UL|Ul|uL|ul|LU|Lu|lU|lu)?\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.binary.bella</string>
            <key>match</key>
            <string>\b0(b|B)[01_]+(U|u|L|l|UL|Ul|uL|ul|LU|Lu|lU|lu)?\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.decimal.bella</string>
            <key>match</key>
            <string>\b([0-9_]+)?\.[0-9_]+((e|E)[0-9]+)?(F|f|D|d|M|m)?\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.decimal.bella</string>
            <key>match</key>
            <string>\b[0-9_]+(e|E)[0-9_]+(F|f|D|d|M|m)?\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.decimal.bella</string>
            <key>match</key>
            <string>\b[0-9_]+(F|f|D|d|M|m)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.decimal.bella</string>
            <key>match</key>
            <string>\b[0-9_]+(U|u|L|l|UL|Ul|uL|ul|LU|Lu|lU|lu)?\b</string>
          </dict>
        </array>
      </dict>
      <key>string-literal</key>
      <dict>
        <key>name</key>
        <string>string.quoted.double.bella</string>
        <key>begin</key>
        <string>"</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.bella</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\")|((?:[^\\\n])$)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.bella</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.newline.bella</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#string-character-escape</string>
          </dict>
        </array>
      </dict>
      <key>string-character-escape</key>
      <dict>
        <key>name</key>
        <string>constant.character.escape.bella</string>
        <key>match</key>
        <string>\\.</string>
      </dict>
      <key>identifier</key>
      <dict>
        <key>name</key>
        <string>variable.other.readwrite.bella</string>
        <key>match</key>
        <string>@?[_[:alpha:]][_[:alnum:]]*</string>
      </dict>
    </dict>
  </dict>
</plist>