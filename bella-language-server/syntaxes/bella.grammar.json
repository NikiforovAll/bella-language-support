{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "bella",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		}
	],
	"repository": {
		"keywords":{
			"patterns": [
				{
					"name":"keyword.operator.new",
					"match": "\\b(if|for|else|foreach|in|=>|let|true|false|shared|setting|persistent|not|empty|is|and|enum|return|emptyDate)\\b"
				},
				{
					"name":"comment.line.double-slash",
					"match":"//.*"

				},
				{
					"name":"keyword.operator.new",
					"match": "new"

				},
				{
				"name":"",
				"match":"\\b(procedure)\\s(.*)(\\()(.*)\\s*\\b",
				"captures": {
					"1": {
						"name": "keyword"
					},
					"2": {
						"name": "entity.name.function"
					},
					"3": {
						"name": "markup.punctuation.quote.beginning"
					},
					"4": {
						"patterns": [
							{
								"name": "entity.name.function.tag",
								"match": "(.*)\\s*\\b(out)\\b(.*)",
								"captures": {
									"1":{
										"name":"meta.type.name"
									},
									"2":{
										"name":"keyword"
									},
									"3":{
										"patterns": [
											{
												"match": "(.*)",
												"captures": {

													"1":{
														"name":"meta.return-type"
													}
												}
											}

										]

									}

								}
							}
						]
					}
				}
			},
			{
				"name":"",
				"match":"(\\berror\\b)\\s*\\[(.*)\\]",
				"captures": {
					"1":
					{
						"name":"invalid"
					},
					"2":{
						"name":"emphasis invalid"
					}
				}
			},
			{
				"name":"",
				"match":"(\\bcall\\b)\\s*\\b(.*)\\b\\s*\\(",
				"captures": {
					"1":{
						"name":"keyword"
					},
					"2":{
						"name":"support.function"
					}
				}

			},
			{
				"match": "(object)\\b([^:]){1}\\b:?(.*)?",
				"captures": {
					"1":{
						"name":"keyword"
					},
					"2":{
						"name":"entity.name.type"
					},
					"3":{
						"name":"entity.name.type"
					}
				}
			},
			{
				"match": "([\\w\\d]*)\\s*:\\s*([\\w\\d]*)",
				"captures": {
					"1":{
						"name":"support.type.property-name"
					},
					"2":{
						"name":"support.type"
					}
				}
			},
			{
				"match": "[^.\\\\\"]\\b([A-Z]{1}[A-z]*)\\b",
				"captures": {
					"1":{
						"name":"variable.name"
					}
				}
			}
			]
		},
		"strings": {
			"name": "string.quoted.double.bella",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.bella",
					"match": "\\\\."
				}
			]
		}
	},
	"scopeName": "source.bs"
}
